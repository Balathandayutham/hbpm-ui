{"version":3,"sources":["webpack:///./src/app/show-process/show-process-routing.module.ts","webpack:///./src/app/show-process/show-process.component.css","webpack:///./src/app/show-process/show-process.component.html","webpack:///./src/app/show-process/show-process.component.ts","webpack:///./src/app/show-process/show-process.module.ts","webpack:///./src/app/show-process/show-process.service.ts"],"names":[],"mappings":"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","file":"show-process-show-process-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ShowProcessComponent } from './show-process.component'\n\nconst routes: Routes = [\n  {path:'', component:ShowProcessComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShowProcessRoutingModule { }\n","module.exports = \"#container {\\r\\n    margin-left:auto;\\r\\n    margin-right:auto;\\r\\n    width:70%;\\r\\n  }\\r\\n.table{\\r\\n  width: 90%;\\r\\n}\\r\\n.sidebar {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    width: 200px;\\r\\n    background-color: #f1f1f1;\\r\\n    position: fixed;\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n  }\\r\\n.btn-lg {\\r\\n   \\r\\n    font-size: 1.25rem;\\r\\n    line-height: 1.5;\\r\\n    border-radius: .3rem;\\r\\n  }\\r\\n.sidebar a {\\r\\n    display: block;\\r\\n    color: black;\\r\\n    padding: 16px;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n.sidebar a.active {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n  }\\r\\n.sidebar a:hover:not(.active) {\\r\\n    background-color: #555;\\r\\n    color: white;\\r\\n  }\\r\\ndiv.content {\\r\\n    margin-left: 200px;\\r\\n    padding: 1px 16px;\\r\\n    \\r\\n  }\\r\\n@media screen and (max-width: 700px) {\\r\\n    .sidebar {\\r\\n      width: 100%;\\r\\n      height: auto;\\r\\n      position: relative;\\r\\n    }\\r\\n    .sidebar a {float: left;}\\r\\n    div.content {margin-left: 0;}\\r\\n  }\\r\\n@media screen and (max-width: 400px) {\\r\\n    .sidebar a {\\r\\n      text-align: center;\\r\\n      float: none;\\r\\n    }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvdy1wcm9jZXNzL3Nob3ctcHJvY2Vzcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixTQUFTO0VBQ1g7QUFDRjtFQUNFLFVBQVU7QUFDWjtBQUNBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGVBQWU7SUFDZixZQUFZO0lBQ1osY0FBYztFQUNoQjtBQUNDOztJQUVDLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsb0JBQW9CO0VBQ3RCO0FBQ0E7SUFDRSxjQUFjO0lBQ2QsWUFBWTtJQUNaLGFBQWE7SUFDYixxQkFBcUI7RUFDdkI7QUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7QUFFQTtJQUNFLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2Q7QUFFQTtJQUNFLGtCQUFrQjtJQUNsQixpQkFBaUI7O0VBRW5CO0FBRUE7SUFDRTtNQUNFLFdBQVc7TUFDWCxZQUFZO01BQ1osa0JBQWtCO0lBQ3BCO0lBQ0EsWUFBWSxXQUFXLENBQUM7SUFDeEIsYUFBYSxjQUFjLENBQUM7RUFDOUI7QUFFQTtJQUNFO01BQ0Usa0JBQWtCO01BQ2xCLFdBQVc7SUFDYjtFQUNGIiwiZmlsZSI6InNyYy9hcHAvc2hvdy1wcm9jZXNzL3Nob3ctcHJvY2Vzcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tbGVmdDphdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OmF1dG87XHJcbiAgICB3aWR0aDo3MCU7XHJcbiAgfVxyXG4udGFibGV7XHJcbiAgd2lkdGg6IDkwJTtcclxufVxyXG4uc2lkZWJhciB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuICAgLmJ0bi1sZyB7XHJcbiAgIFxyXG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIGJvcmRlci1yYWRpdXM6IC4zcmVtO1xyXG4gIH1cclxuICAuc2lkZWJhciBhIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTZweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcblxyXG4gIC5zaWRlYmFyIGEuYWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5zaWRlYmFyIGE6aG92ZXI6bm90KC5hY3RpdmUpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIGRpdi5jb250ZW50IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMDBweDtcclxuICAgIHBhZGRpbmc6IDFweCAxNnB4O1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcwMHB4KSB7XHJcbiAgICAuc2lkZWJhciB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuICAgIC5zaWRlYmFyIGEge2Zsb2F0OiBsZWZ0O31cclxuICAgIGRpdi5jb250ZW50IHttYXJnaW4tbGVmdDogMDt9XHJcbiAgfVxyXG4gIFxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XHJcbiAgICAuc2lkZWJhciBhIHtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBmbG9hdDogbm9uZTtcclxuICAgIH1cclxuICB9Il19 */\"","module.exports = \"<div class=\\\"container-fluid mt-4 content\\\">\\n\\n\\n  <h3 class=\\\"display-4\\\">List Of Process</h3>\\n  <table class=\\\"table table-hover\\\">\\n    <thead>\\n      <tr >\\n        <th scope=\\\"col\\\">ID</th>\\n        <th scope=\\\"col\\\">ProcessName</th>\\n        <th scope=\\\"col\\\">Process Description</th>\\n        <th scope=\\\"col\\\">Created By</th>\\n        <th scope=\\\"col\\\">Created On</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr style=\\\"cursor: pointer;\\\"*ngFor=\\\"let customer of proces\\\" (click)=\\\"onUpdate(customer)\\\">\\n        <td>{{customer.processId}}</td>\\n        <td>{{customer.processName}}</td>\\n        <td>{{customer.processDescription}}</td>\\n        <td>{{customer.createdBy}}</td>\\n        <td>{{customer.createdOn  | date: 'dd/MM/yyyy'}}</td>\\n     </tr>\\n      \\n    </tbody>\\n  </table>\\n  \\n</div>\"","\nimport {  AfterContentInit,  OnInit , Component,  ElementRef,  OnDestroy,  ViewChild} from '@angular/core';\nimport Modeler from 'bpmn-js/lib/Modeler.js';\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\nimport * as camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda.json';\nimport { Observable, empty } from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport { ShowProcessService } from './show-process.service';\n\nimport { Proces } from './Proces';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormGroup,\n  FormArray,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './show-process.component.html',\n  styleUrls: ['./show-process.component.css']\n})\nexport class ShowProcessComponent  implements OnInit {\n  public  proces : Proces[] = []; \n\n  private productsObservable : Observable<any[]> ; \n  public heroes: Event[]=[];\n  myform = new FormGroup({\n    procname: new FormControl(),\n    // itemRows: this._fb.array([this.initItemRows()])\n}); \n\n \n  constructor(private showprocessService:ShowProcessService,private _fb: FormBuilder,private router:Router) { \n    \n  }\n\n  ngOnInit() {\n   \n    this.showprocessService.get_products().subscribe((res)=>{\n      this.proces=res;\n      \n });\n  }\n  onUpdate(customer){\n    this.router.navigate(['show-workflow',customer])\n  }\n//   OnSubmit() {\n//     if (this.myform.valid) {\n     \n      \n//       for(let c of this.myform.get('itemRows').value){\n        \n//        if(c.id==\"\"){\n         \n//           this.heroes.push(c);\n//        }\n        \n//       }\n      \n//       this.showprocessService.save_events(this.heroes,this.myform.get('procname').value).subscribe((res)=>{\n//         console.log(res);\n        \n//    });\n//       this.myform.reset();\n//     }\n//   }\n//   reset() {\n//     for(let c of this.myform.get('itemRows').value){\n//         var a=1;\n//       this.formArr.removeAt(a);\n//        a++;\n//      }\n//       this.myform.reset();\n   \n//   }\n\n//   get formArr() {\n//     return this.myform.get('itemRows') as FormArray;\n//   }\n\n//   initItemRows() {\n//     return this._fb.group({\n//       id : [''],\n//     processId :[''],\n//     eventName:[''],\n//     eventDescription:[''],\n   \n//     });\n//   }\n//   addNewRow() {\n//     this.formArr.push(this.initItemRows());\n//   }\n\n//   deleteRow(index: number) {\n//     this.formArr.removeAt(index);\n//   }\n//   onChangeEvent(ev) {\n//     for(let c of this.myform.get('itemRows').value){\n//       var a=0;\n//     this.formArr.removeAt(a);\n//      a++;\n//    }\n//    this.formArr.push(this.initItemRows());\n//     console.log(ev.target.value); // should print option1\n//     this.setEmployeeValues(ev.target.value);\n// }\n//   setEmployeeValues(id) {\n//     var a=1;\n//     // this.heroes = [\n//     //   { name: \"event1\", descripition: \"event1\"},\n//     //   { name: \"event2\", descripition: \"event2\"}\n//     // ]\n//     this.showprocessService.get_events(id).subscribe((res)=>{\n//       this.event=res;\n    \n//       for ( let c of this.event ){\n//        if (a!=1){\n//         this.formArr.push(this.initItemRows());\n//        }\n//         console.log(c);\n//         a++;\n//       }\n//       this.formArr.setValue(\n//         this.event\n//        );\n//   });\n  \n  \n//    } \n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShowProcessRoutingModule } from './show-process-routing.module';\nimport { ShowProcessComponent } from './show-process.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormArray,\n  FormBuilder\n} from '@angular/forms';\n@NgModule({\n  declarations: [ShowProcessComponent],\n  imports: [\n    CommonModule,\n    ShowProcessRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class ShowProcessModule   {\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http/src/response';\nimport { Observable } from 'rxjs';\n\nimport { Proces } from './proces';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowProcessService {\n  private products  = []; \n  // baseUrl:string = \"https://xmltest.free.beeceptor.com\";\n  constructor(private httpService: HttpClient) { \n\n  }\n\n   \n   get_products(){\n     let headers =new HttpHeaders();\n    headers.append('Access-Control-Allow-Headers', 'Content-Type');\n    headers.append('Access-Control-Allow-Methods', 'GET');\n    headers.append('Access-Control-Allow-Origin', '*');\n    return this.httpService.get('http://localhost:8082/hbpm/process/retrieve',{headers}).map(res => res as Proces[] || []);\n}\n// get_events(id):Observable<Event[]>{\n//   const  params = new  HttpParams({fromString:  'id='+id});\n//   let headers =new HttpHeaders();\n//   headers.append('Access-Control-Allow-Headers', 'Content-Type');\n//   headers.append('Access-Control-Allow-Methods', 'GET');\n//   headers.append('Access-Control-Allow-Origin', '*');\n//   return this.httpService.get<Event[]>('http://localhost:8082/hbpm/process/events/retrieve/{id}',{params}).map(res => res as Event[] || [])\n// }\n\n// save_events(eve,id){\n//   const  params = new  HttpParams({fromString:  'id='+id});\n//   let headers =new HttpHeaders();\n//   headers.append('Access-Control-Allow-Headers', 'Content-Type');\n//   headers.append('Access-Control-Allow-Methods', 'POST');\n//   headers.append('Access-Control-Allow-Origin', '*');\n//   return this.httpService.post('http://localhost:8082/hbpm/process/events?',eve,{params,headers}).map(res => res);\n// }\n}\n"],"sourceRoot":""}