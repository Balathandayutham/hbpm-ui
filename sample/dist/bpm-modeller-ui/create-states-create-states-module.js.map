{"version":3,"sources":["webpack:///./src/app/create-states/create-states-routing.module.ts","webpack:///./src/app/create-states/create-states.component.css","webpack:///./src/app/create-states/create-states.component.html","webpack:///./src/app/create-states/create-states.component.ts","webpack:///./src/app/create-states/create-states.module.ts","webpack:///./src/app/create-states/create-states.service.ts"],"names":[],"mappings":"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","file":"create-states-create-states-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateStateComponent } from './create-states.component'\n\nconst routes: Routes = [\n  {path:'', component:CreateStateComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CreateStateRoutingModule { }\n","module.exports = \".sidebar {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    width: 200px;\\r\\n    background-color: #f1f1f1;\\r\\n    position: fixed;\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n  }\\r\\n  \\r\\n  .sidebar a {\\r\\n    display: block;\\r\\n    color: black;\\r\\n    padding: 16px;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  \\r\\n  .sidebar a.active {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .sidebar a:hover:not(.active) {\\r\\n    background-color: #555;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  div.content {\\r\\n    margin-left: 200px;\\r\\n    padding: 1px 16px;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  @media screen and (max-width: 700px) {\\r\\n    .sidebar {\\r\\n      width: 100%;\\r\\n      height: auto;\\r\\n      position: relative;\\r\\n    }\\r\\n    .sidebar a {float: left;}\\r\\n    div.content {margin-left: 0;}\\r\\n  }\\r\\n  \\r\\n  @media screen and (max-width: 400px) {\\r\\n    .sidebar a {\\r\\n      text-align: center;\\r\\n      float: none;\\r\\n    }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLXN0YXRlcy9jcmVhdGUtc3RhdGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsZUFBZTtJQUNmLFlBQVk7SUFDWixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsY0FBYztJQUNkLFlBQVk7SUFDWixhQUFhO0lBQ2IscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsaUJBQWlCOztFQUVuQjs7RUFFQTtJQUNFO01BQ0UsV0FBVztNQUNYLFlBQVk7TUFDWixrQkFBa0I7SUFDcEI7SUFDQSxZQUFZLFdBQVcsQ0FBQztJQUN4QixhQUFhLGNBQWMsQ0FBQztFQUM5Qjs7RUFFQTtJQUNFO01BQ0Usa0JBQWtCO01BQ2xCLFdBQVc7SUFDYjtFQUNGIiwiZmlsZSI6InNyYy9hcHAvY3JlYXRlLXN0YXRlcy9jcmVhdGUtc3RhdGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZWJhciB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuICBcclxuICAuc2lkZWJhciBhIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTZweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcbiAgIFxyXG4gIC5zaWRlYmFyIGEuYWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5zaWRlYmFyIGE6aG92ZXI6bm90KC5hY3RpdmUpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIGRpdi5jb250ZW50IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMDBweDtcclxuICAgIHBhZGRpbmc6IDFweCAxNnB4O1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcwMHB4KSB7XHJcbiAgICAuc2lkZWJhciB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuICAgIC5zaWRlYmFyIGEge2Zsb2F0OiBsZWZ0O31cclxuICAgIGRpdi5jb250ZW50IHttYXJnaW4tbGVmdDogMDt9XHJcbiAgfVxyXG4gIFxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XHJcbiAgICAuc2lkZWJhciBhIHtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBmbG9hdDogbm9uZTtcclxuICAgIH1cclxuICB9Il19 */\"","module.exports = \"<div class=\\\"container mt-4 content\\\">\\n  \\n    <h1 class=\\\"display-4\\\">Create Sates</h1>\\n    <form  [formGroup]=\\\"myform\\\" (ngSubmit)=\\\"OnSubmit()\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">Select Process</label>\\n        <div class=\\\"col-sm-6\\\">\\n         \\n          <select  class=\\\"form-control\\\" (change)=\\\"onChangeEvent($event)\\\" style=\\\"margin-bottom: 10px;width: 300px;\\\" formControlName=\\\"procname\\\">\\n            <option value=\\\"0\\\">--All--</option>\\n            <option *ngFor=\\\"let summary of proces\\\" value={{summary.processId}}>\\n                {{summary.processName}}\\n            </option>\\n        </select>\\n \\n        </div>\\n  \\n      <div class=\\\"col-sm-12 table-responsive\\\" formArrayName=\\\"itemRows\\\">\\n          \\n        <table class=\\\"table\\\"  style=\\\"width: 30px;\\\" >\\n          <thead>\\n            <tr>\\n              \\n              <th style=\\\"white-space: nowrap;padding-right: 2em;float:center\\\">States </th>\\n              <th style=\\\"white-space: nowrap;padding-right: 2em;float:center\\\">Descripition </th>\\n             \\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let itemrow of myform.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\n  \\n             \\n               <td> <input type=\\\"text\\\" id=\\\"learn{{i}}\\\" style=\\\"\\n                height: 45px;    width: 18em;\\\" formControlName=\\\"stateName\\\" class=\\\"form-control reset\\\"></td>\\n              <td> <input type=\\\"text\\\" formControlName=\\\"stateDescription\\\"style=\\\"\\n                height: 45px;    width: 18em;\\\" class=\\\"form-control reset\\\"></td>\\n             \\n              <td> <button *ngIf=\\\"myform.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-danger\\\"><i class=\\\"fa fa-minus-circle\\\" aria-hidden=\\\"true\\\"></i></button></td>\\n            </tr>\\n          </tbody>\\n          <tfoot>\\n            <tr><td> <button type=\\\"button\\\" (click)=\\\"addNewRow()\\\" class=\\\"btn btn-primary\\\"><i style=\\\"width:10px\\\"class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i></button></td></tr>\\n          </tfoot>\\n        </table>\\n        <button class=\\\"btn btn-sm btn-secondary \\\"  type=\\\"button\\\" (click) = \\\"reset()\\\">Reset</button>\\n      <button class=\\\"ml-4 btn btn-sm btn-primary \\\"  type=\\\"submit\\\">Submit</button>\\n    </div>\\n  \\n  \\n  \\n    </form>\\n  </div>\\n  \\n  \"","\nimport {  AfterContentInit,  OnInit , Component,  ElementRef,  OnDestroy,  ViewChild} from '@angular/core';\nimport Modeler from 'bpmn-js/lib/Modeler.js';\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\nimport * as camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda.json';\nimport { Observable } from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormGroup,\n  FormArray,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport { CreateStateService } from '../create-states/create-states.service';\nimport { Procestate } from './procestate';\nimport { State } from './states';\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './create-states.component.html',\n  styleUrls: ['./create-states.component.css']\n})\nexport class CreateStateComponent   implements OnInit {\n  public  proces : Procestate[] = []; \n  public  event : State[] = []; \n  private productsObservable : Observable<any[]> ; \n  public heroes: State[]=[];\n  myform = new FormGroup({\n    procname: new FormControl(),\n    itemRows: this._fb.array([this.initItemRows()])\n}); \n\n \n  constructor(private createstateService:CreateStateService,private _fb: FormBuilder) { \n    \n  }\n\n  ngOnInit() {\n   \n    this.createstateService.get_process().subscribe((res)=>{\n\n      this.proces=res;\n });\n  }\n  \n  OnSubmit() {\n    if (this.myform.valid) {\n     \n      \n      for(let c of this.myform.get('itemRows').value){\n        \n       if(c.id==\"\"){\n         \n          this.heroes.push(c);\n       }\n        \n      }\n      \n      this.createstateService.save_states(this.heroes,this.myform.get('procname').value).subscribe((res)=>{\n        console.log(res);\n        \n   });\n      this.myform.reset();\n    }\n  }\n  reset() {\n    for(let c of this.myform.get('itemRows').value){\n        var a=1;\n      this.formArr.removeAt(a);\n       a++;\n     }\n      this.myform.reset();\n   \n  }\n\n  get formArr() {\n    return this.myform.get('itemRows') as FormArray;\n  }\n\n  initItemRows() {\n    return this._fb.group({\n      id : [''],\n      processId :[''],\n      stateName:[''],\n      stateDescription:[''],\n   \n    });\n  }\n  addNewRow() {\n    this.formArr.push(this.initItemRows());\n  }\n\n  deleteRow(index: number) {\n    this.formArr.removeAt(index);\n  }\n\n  onChangeEvent(ev) {\n    for(let c of this.myform.get('itemRows').value){\n      var a=0;\n    this.formArr.removeAt(a);\n     a++;\n   }\n   this.formArr.push(this.initItemRows());\n   \n    console.log(ev.target.value); // should print option1\n    this.setEmployeeValues(ev.target.value);\n}\n\n  setEmployeeValues(id) {\n    var a=1;\n    // this.heroes = [\n    //   { name: \"event1\", descripition: \"event1\"},\n    //   { name: \"event2\", descripition: \"event2\"}\n    // ]\n    this.createstateService.get_states(id).subscribe((res)=>{\n      this.event=res;\n    \n      for ( let c of this.event ){\n       if (a!=1){\n        this.formArr.push(this.initItemRows());\n       }\n        console.log(c);\n        a++;\n      }\n      this.formArr.setValue(\n        this.event\n       );\n  });\n  \n  \n   } \n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CreateStateRoutingModule } from './create-states-routing.module';\nimport { CreateStateComponent } from './create-states.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormArray,\n  FormBuilder\n} from '@angular/forms';\n\n@NgModule({\n  declarations: [CreateStateComponent],\n  imports: [\n    CommonModule,\n    CreateStateRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class CreateStateModule   {\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { State } from './states';\nimport { Procestate } from './procestate';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateStateService {\n\n  private products  = []; \n  baseUrl:string = \"https://xmltest.free.beeceptor.com\";\n  constructor(private httpService: HttpClient) { \n\n  }\n\n   \n   \n  get_process(){\n    let headers =new HttpHeaders();\n   headers.append('Access-Control-Allow-Headers', 'Content-Type');\n   headers.append('Access-Control-Allow-Methods', 'GET');\n   headers.append('Access-Control-Allow-Origin', '*');\n   return this.httpService.get('http://localhost:8082/hbpm/process/retrieve',{headers}).map(res => res as Procestate[] || []);\n}\nget_states(id):Observable<State[]>{\n const  params = new  HttpParams({fromString:  'id='+id});\n let headers =new HttpHeaders();\n headers.append('Access-Control-Allow-Headers', 'Content-Type');\n headers.append('Access-Control-Allow-Methods', 'GET');\n headers.append('Access-Control-Allow-Origin', '*');\n return this.httpService.get<State[]>('http://localhost:8082/hbpm/process/states/retrieve/{id}',{params}).map(res => res as State[] || [])\n}\n\nsave_states(eve,id){\n const  params = new  HttpParams({fromString:  'id='+id});\n let headers =new HttpHeaders();\n headers.append('Access-Control-Allow-Headers', 'Content-Type');\n headers.append('Access-Control-Allow-Methods', 'POST');\n headers.append('Access-Control-Allow-Origin', '*');\n return this.httpService.post('http://localhost:8082/hbpm/process/states?',eve,{params,headers}).map(res => res);\n}\n}\n"],"sourceRoot":""}